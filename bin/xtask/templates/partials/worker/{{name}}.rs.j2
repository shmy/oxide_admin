use bg_worker_kit::Worker;
use bg_worker_kit::error::Result;
use bon::Builder;
use serde::{Deserialize, Serialize};
use infrastructure::shared::provider::Provider;

#[derive(Debug, Clone, Serialize, Deserialize, Builder)]
pub struct {{name | pascal_case}} {
     // Define worker parameters here
}

impl Worker for {{name | pascal_case}} {
     type State = Provider;

    const NAME: &'static str = "{{name | snake_case}}";

    const CONCURRENCY: usize = 1;

    const RETRIES: usize = 3;

    const TIMEOUT: std::time::Duration = std::time::Duration::from_secs(30);

    async fn execute(_params: Self, _state: &Self::State) -> Result<()> {

        Ok(())
    }
}
