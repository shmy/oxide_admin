use anyhow::Result;
use bg_worker::{JobRunner, error::RunnerError};
use nject::injectable;
use serde::{Deserialize, Serialize};

#[derive(Clone, Serialize, Deserialize)]
pub struct {{name | pascal_case}}JobParams {
    // Define job parameters here
}

#[derive(Clone)]
#[injectable]
pub struct {{name | pascal_case}}Job;

impl JobRunner for {{name | pascal_case}}Job {
    type Params = {{name | pascal_case}}JobParams;

    async fn run(&self, _params: Self::Params) -> Result<(), RunnerError> {

        Ok(())
    }
}
